version: "3"

services:
  postgres:
    image: wodby/postgres:$POSTGRES_TAG
    container_name: "${PROJECT_NAME}_postgres"
    stop_grace_period: 30s
    environment:
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USER
    volumes:
    - ./postgres-init:/docker-entrypoint-initdb.d # Place init file(s) here.
    - ../dbdata:/var/lib/postgresql/data # I want to manage volumes manually.
    networks:
      - internal
    labels:
      - traefik.enable=false


  python:
    build:
      context: ./
      args:
        PYTHON_TAG: $PYTHON_TAG
    container_name: "${PROJECT_NAME}_python"
    environment:
      DB_HOST: $DB_HOST
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_NAME: $DB_NAME
      DB_ENGINE: $DB_ENGINE
    volumes:
    - ./:/usr/src/app:cached
    networks:
      - internal
    labels:
      - traefik.enable=false
        

  nginx:
    image: wodby/nginx:$NGINX_TAG
    container_name: "${PROJECT_NAME}_nginx"
    depends_on:
    - python
    environment:
      NGINX_STATIC_OPEN_FILE_CACHE: "off"
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_VHOST_PRESET: django
      NGINX_BACKEND_HOST: python
      NGINX_DJANGO_STATIC_ROOT: /usr/src/app/public/static/
      NGINX_DJANGO_MEDIA_ROOT: /usr/src/app/public/media/
      # Use this if you don't need Django's media/static locations.
      #NGINX_VHOST_PRESET: http-proxy
    volumes:
    - ./:/usr/src/app:cached
    labels:
    - "traefik.http.routers.${PROJECT_NAME}_nginx.rule=Host(`${PROJECT_BASE_URL}`)"
    - "traefik.http.routers.${PROJECT_NAME}_nginx.entrypoints=websecure"
    - "traefik.http.routers.${PROJECT_NAME}_nginx.tls=true"
    - "traefik.http.routers.${PROJECT_NAME}_nginx.tls.certresolver=le"
    - 'traefik.docker.network=proxy'
    - "traefik.enable=true"
    networks:
      - internal
      - proxy


networks:
  proxy:
    external: true
  internal:
    external: false
